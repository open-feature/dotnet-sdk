name: Run Release Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    permissions:
      id-token: write # for googleapis/release-please-action to create release tag
      contents: write # for googleapis/release-please-action to create release commit, SBOM release
      pull-requests: write # for googleapis/release-please-action to create release PR
      packages: read # for internal nuget reading
      attestations: write # for actions/attest-sbom to create attestation

    runs-on: ubuntu-latest

    steps:
      - uses: googleapis/release-please-action@a02a34c4d625f9be7cb89156071d8567266a2445 #v4
        id: release
        with:
          token: ${{secrets.RELEASE_PLEASE_ACTION_TOKEN}}
          release-type: simple
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      release_tag_name: ${{ steps.release.outputs.tag_name }}

  release:
    environment: publish
    runs-on: ubuntu-latest
    needs: release-please
    permissions:
      id-token: write
      contents: read
      attestations: write
    if: ${{ needs.release-please.outputs.release_created }}

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@67a3573c9a986a3f9c594539f4ab511d57bb3ce9 # v4
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          global-json-file: global.json
          source-url: https://nuget.pkg.github.com/open-feature/index.json

      - name: Install CycloneDX.NET
        run: dotnet tool install --global CycloneDX

      - name: Install dependencies
        run: dotnet restore

      - name: Pack
        run: dotnet pack -c Release --no-restore

      - name: Publish to Nuget
        run: dotnet nuget push "src/**/*.nupkg" --api-key "${{ secrets.NUGET_TOKEN }}" --source https://api.nuget.org/v3/index.json

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@db473fddc028af60658334401dc6fa3ffd8669fd # v2.3.0
        with:
          subject-path: "src/**/*.nupkg"

      # Process OpenFeature project
      - name: Process SBOM for OpenFeature
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          PROJECT_NAME: OpenFeature
          PROJECT_PATH: ./src/OpenFeature/OpenFeature.csproj
          RELEASE_TAG: ${{ needs.release-please.outputs.release_tag_name }}
        run: |
          # Generate SBOM
          dotnet CycloneDX --json --exclude-dev -sv "$RELEASE_TAG" $PROJECT_PATH --output ./artifacts/sboms/ -fn $PROJECT_NAME.bom.json
          # Upload SBOM to release
          gh release upload $RELEASE_TAG ./artifacts/sboms/$PROJECT_NAME.bom.json

      - name: Attest OpenFeature package
        uses: actions/attest-sbom@115c3be05ff3974bcbd596578934b3f9ce39bf68 # v2.2.0
        with:
          subject-path: "src/**/OpenFeature.*.nupkg"
          sbom-path: ./artifacts/sboms/OpenFeature.bom.json

      # Process OpenFeature.Hosting project
      - name: Process SBOM for OpenFeature.Hosting
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          PROJECT_NAME: OpenFeature.Hosting
          PROJECT_PATH: ./src/OpenFeature.Hosting/OpenFeature.Hosting.csproj
          RELEASE_TAG: ${{ needs.release-please.outputs.release_tag_name }}
        run: |
          # Generate SBOM
          dotnet CycloneDX --json --exclude-dev -sv "$RELEASE_TAG" $PROJECT_PATH --output ./artifacts/sboms/ -fn $PROJECT_NAME.bom.json
          # Upload SBOM to release
          gh release upload $RELEASE_TAG ./artifacts/sboms/$PROJECT_NAME.bom.json

      - name: Attest OpenFeature.Hosting package
        uses: actions/attest-sbom@115c3be05ff3974bcbd596578934b3f9ce39bf68 # v2.2.0
        with:
          subject-path: "src/**/OpenFeature.Hosting.*.nupkg"
          sbom-path: ./artifacts/sboms/OpenFeature.Hosting.bom.json

      # Process OpenFeature.DependencyInjection project
      - name: Process SBOM for OpenFeature.DependencyInjection
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          PROJECT_NAME: OpenFeature.DependencyInjection
          PROJECT_PATH: ./src/OpenFeature.DependencyInjection/OpenFeature.DependencyInjection.csproj
          RELEASE_TAG: ${{ needs.release-please.outputs.release_tag_name }}
        run: |
          # Generate SBOM
          dotnet CycloneDX --json --exclude-dev -sv "$RELEASE_TAG" $PROJECT_PATH --output ./artifacts/sboms/ -fn $PROJECT_NAME.bom.json
          # Upload SBOM to release
          gh release upload $RELEASE_TAG ./artifacts/sboms/$PROJECT_NAME.bom.json

      - name: Attest OpenFeature.DependencyInjection package
        uses: actions/attest-sbom@115c3be05ff3974bcbd596578934b3f9ce39bf68 # v2.2.0
        with:
          subject-path: "src/**/OpenFeature.DependencyInjection.*.nupkg"
          sbom-path: ./artifacts/sboms/OpenFeature.DependencyInjection.bom.json
