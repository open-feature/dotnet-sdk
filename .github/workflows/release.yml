name: Run Release Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    permissions:
      id-token: write # for googleapis/release-please-action to create release tag
      contents: write # for googleapis/release-please-action to create release commit
      pull-requests: write # for googleapis/release-please-action to create release PR

    runs-on: ubuntu-latest

    steps:
      - uses: googleapis/release-please-action@c2a5a2bd6a758a0937f1ddb1e8950609867ed15c # v4
        id: release
        with:
          token: ${{secrets.RELEASE_PLEASE_ACTION_TOKEN}}
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      release_tag_name: ${{ steps.release.outputs.tag_name }}

  release:
    environment: publish
    runs-on: ubuntu-latest
    needs: release-please
    permissions:
      id-token: write
      contents: write # for SBOM release
      attestations: write # for actions/attest-sbom to create attestation
      packages: read # for internal nuget reading
    if: ${{ fromJSON(needs.release-please.outputs.release_created || false) }}

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@67a3573c9a986a3f9c594539f4ab511d57bb3ce9 # v4
        with:
          global-json-file: global.json

      - name: Cache NuGet packages
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', 'Directory.Packages.props', 'global.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Install dependencies
        run: dotnet restore

      - name: Pack
        run: dotnet pack -c Release --no-restore

      - name: Publish to Nuget
        run: dotnet nuget push "src/**/*.nupkg" --api-key "${{ secrets.NUGET_TOKEN }}" --source https://api.nuget.org/v3/index.json

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@977bb373ede98d70efdf65b84cb5f73e068dcc2a # v3.0.0
        with:
          subject-path: "src/**/*.nupkg"

      # Process OpenFeature project
      - name: Generate and Attest SBOM for OpenFeature
        uses: ./.github/actions/sbom-generator
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          project-name: OpenFeature
          release-tag: ${{ needs.release-please.outputs.release_tag_name }}

      # Process OpenFeature.Hosting project
      - name: Generate and Attest SBOM for OpenFeature.Hosting
        uses: ./.github/actions/sbom-generator
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          project-name: OpenFeature.Hosting
          release-tag: ${{ needs.release-please.outputs.release_tag_name }}

      # Process OpenFeature.DependencyInjection project
      - name: Generate and Attest SBOM for OpenFeature.DependencyInjection
        uses: ./.github/actions/sbom-generator
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          project-name: OpenFeature.DependencyInjection
          release-tag: ${{ needs.release-please.outputs.release_tag_name }}

      # Process OpenFeature.Providers.MultiProvider project
      - name: Generate and Attest SBOM for OpenFeature.Providers.MultiProvider
        uses: ./.github/actions/sbom-generator
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          project-name: OpenFeature.Providers.MultiProvider
          release-tag: ${{ needs.release-please.outputs.release_tag_name }}
